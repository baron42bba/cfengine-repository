#######################################################
# Adapted STIGs settings
#######################################################
#
# Scenario:
# STIG recomended setting are applied through this 
# bundles. It uses "old" markups (GENxxxxxx) of rules from: 
# http://iase.disa.mil/stigs/downloads/pdf/unix-stig-v5r1.pdf
# as well as the ones (V-xxxxx) from: 
# http://www.stigviewer.com/stig/red_hat_enterprise_linux_6/
#
# It has support for initd and systemd frameworks
# It is more soft class oriented (removed redhat_5, redhat_6,
# etc.) with determination of package and file existence through 
# creation of appropriate soft classes. 
#
# It can be applied to Redhat7/CentOS7. With little effort it
# can be changed to work with other Linux distributions.
#
# Original author: CFEngine
# Adapted by: Jurica Borozan
# Version: 1.2.0
#

##
## When testing uncoment
##
#body common control
#{
#  any::
#    bundlesequence => { "jb_STIGs" };
#    inputs => { "$(sys.libdir)/stdlib.cf" };
#}

##
##
##
bundle common jb_STIGs_def
{
  meta:
    "tags" slist => { "autorun" };

  classes:

    redhat|centos::
    
      "have_systemd" 
            comment => "Check if the machine has systemd installed",
             handle => "stigs_classes_have_lib_systemd",
                and => {
                         isdir("/usr/lib/systemd"),
                         isdir("/etc/systemd"),
                         fileexists("$(paths.systemctl)"),
                         fileexists("/usr/lib/systemd/systemd"),
                       };
}

##
## STIGs compliance with Cfengine3 
##
bundle agent jb_STIGs
{
  meta:
    "tags" slist => { "autorun" };

  vars:

    redhat|centos::

# comment data
      "params_files" slist => findfiles("$(this.promise_dirname)/$(this.bundle).json", "$(this.promise_dirname)/$(this.bundle).yaml");
      "params"        data => readdata(nth("params_files", 0), "auto");


      "shadow" -> { "GEN000560" }
         comment => "Read all contents in /etc/shadow for string manipulation later on",
          handle => "stigs_vars_strings_from_etc_shadow",
          string => readfile("/etc/shadow", 99999);
     
      "shadow_list" -> { "GEN000560" } 
         comment => "Break strings into a list",
          handle => "stigs_vars_list_from_etc_shadow",
           slist => splitstring("$(shadow)","[\n]",500);
     
      "usr_dir" -> { "GEN001080" }
         comment => "/usr directory",
          handle => "stigs_vars_usr_directory",
          string => "/usr/bin";
     
      "shells" -> { "GEN001080" }
         comment => "List of Root shells",
          handle => "stigs_vars_root_shells",
           slist => { "bash", "sh" };
     
      "fstab_contents" -> { "GEN001080", "GEN002420" }
         comment => "All Contents of /etc/fstab",
          handle => "stigs_vars_fstab_contents",
          string => readfile("/etc/fstab","4000");
     
      "network_services_daemon_files" -> { "GEN001180" } 
         comment => "List of Network services daemon files",
          handle => "stigs_vars_network_services_daemon_files",
           slist => findfiles(
                     "/var/cfengine/state/cf_incoming.nfsd",
                     "/var/cfengine/state/cf_outgoing.nfsd",
                     "/usr/sbin/*"
                    );
     
      "system_log_files" -> { "GEN001260" } 
         comment => "List of system log files",
          handle => "stigs_vars_system_log_files",
           slist => { 
                     "/var/log"
                    };
     
      "manual_page_files" -> { "GEN001280" } 
         comment => "List of manual page files",
          handle => "stigs_vars_manual_page_files",
           slist => { 
                     "/usr/share/man",
                    };
     
      "home_users" -> { "GEN001440", "GEN001460", "GEN001480", "GEN001500", "GEN001520" }
         comment => "Create a tmp file listing HOME users",
          handle => "stigs_vars_home_users_tmp",
          string => execresult("$(paths.grep) home /etc/passwd | $(paths.awk) -F':' '{print $1}'","useshell");
     
      "users_list" -> { "GEN001440", "GEN001460", "GEN001480", "GEN001500", "GEN001520" }
         comment => "Read the tmp file to create an actual list of HOME users",
          handle => "stigs_vars_home_users_list",
           slist => splitstring("$(home_users)", "[\n]", 500);
     
      "rc_files" -> { "GEN001580", "GEN001620", "GEN001660", "GEN001680" }
         comment => "List of Run Control Scripts",
          handle => "stigs_vars_rc_files",
           slist => {
                     "/etc/rc.d/rc",
                     "/etc/rc.d/rc.local",
                     "/etc/rc.d/rc.sysinit",
                    };
     
      "global_init_files" -> { "GEN001720", "GEN001740", "GEN001760", "GEN001780" }
         comment => "List of Global Initialization files",
          handle => "stigs_vars_global_init_files",
           slist => {
                     "/etc/profile",
                     "/etc/bashrc",
                     "/etc/environment",
                    };
     
      "skeleton_dot_files" -> { "GEN001800", "GEN001820" }
         comment => "List of default/skeleton dot files",
          handle => "stigs_vars_skeleton_dot_files",
           slist => {
                     "/etc/skel/.bash_logout",
                     "/etc/skel/.bash_profile",
                     "/etc/skel/.emacs",
                     "/etc/skel/.bashrc",
                    };
     
      "hosts_related_files" -> { "GEN002040" }
         comment => "List of hosts related files",
          handle => "stigs_vars_hosts_related_files",
           slist => {
                     "/root/.rhosts",
                     "/root/.shosts",
                     "/etc/hosts.equiv",
                    };
     
      "pam_files" -> { "GEN002100" }
         comment => "List of PAM files to disable .rhosts",
          handle => "stigs_vars_pam_files",
           slist => { 
                     "/etc/pam.d/ekshell",
                     "/etc/pam.d/kshell",
                    };
     
      "shell_files" -> { "GEN002160", "GEN002180", "GEN002200", "GEN002220" }
         comment => "List of login shells from /etc/shells",
          handle => "stigs_vars_shell_files",
           slist => readstringlist("/etc/shells", "#.*", "[\n]", 10, 1000);
     
      "fstab_list" -> { "GEN002420" }
         comment => "Break string into a list",
          handle => "stigs_vars_list_from_etc_fstab",
           slist => splitstring("$(fstab_contents)", "[\n]", 100);
     
      "umask_files" -> { "GEN001560", "GEN002560" }
         comment => "List of files which contain system and user default umask",
          handle => "stigs_vars_umask_files",
           slist => { 
                     "/etc/bashrc",
                     "/etc/csh.cshrc",
                     "/etc/csh.login",
                    };
     
      "allusers_not_root" -> { "GEN002640", "GEN003300", "GEN003320" }
         comment => "List of all system accounts but root and hypen users",
          handle => "stigs_vars_list_allusers_not_root",
           slist => getusers("root","0");
     
      "uids[$(allusers_not_root)]" -> { "GEN002640" }
         comment => "List of system UIDs",
          handle => "stigs_vars_allusers_not_root_uid",
             int => getuid("$(allusers_not_root)");
     
      "cron_users" -> { "GEN002960" }
         comment => "List of users who would be able to use cron utility",
          handle => "stigs_vars_cron_users",
           slist => { 
                     "root",
                     "user1",
                     "user2",
                     "user3",
                    };
     
      "cron_dirs" -> { "GEN003040", "GEN003080" } 
         comment => "List of cron directories",
          handle => "stigs_vars_cron_dirs",
           slist => { 
                     "/etc/cron.hourly",
                     "/etc/cron.daily",
                     "/etc/cron.weekly",
                     "/etc/cron.monthly",
                     "/etc/cron.d",
                    };
     
      "other_cron_dirs" -> { "GEN003040", "GEN003080" } 
         comment => "List of other cron directories",
          handle => "stigs_vars_other_cron_dirs",
           slist => { 
                     "/var/spool/cron",
                    };
     
      "cron_files" -> { "GEN003040", "GEN003080" }
         comment => "List of cron files",
          handle => "stigs_vars_cron_files",
           slist => {
                     "/etc/crontab",
                     "/usr/share/logwatch/scripts/logwatch.pl",
                    };
     
      "at_deny_users" -> { "GEN003300", "GEN003320" }
         comment => "List of users to add to /etc/at.deny (All users but root)",
          handle => "stigs_vars_at_deny_users",
           slist => getusers("root","0");
     
      "homes" -> { "GEN004580" }
         comment => "String source of all home directories on the system",
          handle => "stigs_vars_homes_source",
          string => execresult("$(paths.cut) -d: -f6 /etc/passwd","noshell");
     
      "home_list" -> { "GEN004580" }
         comment => "List of all home directories on the system (ready to use)",
          handle => "sting_vars_home_list",
           slist => splitstring("$(homes)", "[\n]", 100);
     
#    first disable than delete ? actually just delete will do !
#      "accounts_to_disable" -> { "GEN004820", "GEN004840" }
#         comment => "List of users to be disabled (not to be deleted from the system)",
#          handle => "stigs_vars_accounts_to_disable",
#           slist => { 
#                     "ftp",
#                    };
     
      "accounts_to_delete" -> { "GEN004820", "GEN004840", "LNX00320", "LNX00340" }
         comment => "List of unnecessary accounts",
          handle => "stigs_vars_accounts_to_delete",
           slist => {
                     "ftp", 
                     "shutdown",
                     "halt",
                     "game",
                     "news",
                     "operator",
                     "gopher",
                     "nfsnobody",
                    };
     
      "security_iptables_tools" -> { "GEN006520" }
         comment => "List of security iptables tools and databases",
          handle => "stigs_vars_security_iptables_tools",
           slist => {
                     "/etc/rc.d/init.d/iptables",
                     "$(paths.iptables)",
                     "$(paths.iptables_save)",
                     "$(paths.iptables)-restore",
                     "/sbin/ip6tables",
                     "/sbin/ip6tables-save",
                     "/sbin/ip6tables-restore",
                     "$(paths.iptables)-multi",
                     "/sbin/xtables-multi",
                     "/usr/share/logwatch/scripts/services/iptables",
                    };
     
      "security_services" -> { "GEN006520" }
         comment => "List of security systemd services",
          handle => "stigs_vars_security_services",
           slist => {
                     "firewalld",
                     "iptables",
                     "ip6tables",
                     "ebtables",
                    };
     
      "security_services_config_files" -> { "GEN006520" }
         comment => "List of security systemd services files",
          handle => "stigs_vars_security_services_config_files",
           slist => {
                     "/etc/firewalld/firewalld.conf",
                     "/etc/sysconfig/iptables",
                     "/etc/sysconfig/ip6tables",
                     "/etc/sysconfig/ebtables",
                    };
     
      "hosts_allow" -> { "GEN006620" }
         comment => "List of hosts to be assigned to /etc/hosts.allow",
          handle => "stigs_vars_hosts_allow",
           slist => { 
#                     "ALL:10.",
#                     "ALL:172.16.",
                     "ALL:192.168.30.",
                     "sshd:ALL"
                    };
     
# this aplies to prefered and unneeded services:
# if the machine does not have systemd, error occurs and no valid status get written to variable
# if machine does have systemd, it "understands" initd scripts and same check will be done twice 
# via systemd and initd
# some services could have different names in systemd and initd frameworks
# services in systemd could come as multiple extensioned files
     
      "preferred_services" -> { "GEN002660" }
         comment => "List of system services to be turn on",
          handle => "stigs_vars_preferred_services",
           slist => {
                     "auditd"
                    };
     
      "$(preferred_services)_initd_status" -> { "GEN002660" } 
         comment => "List of service status of those preferred services",
          handle => "stigs_vars_preferred_initd_services_status",
          string => execresult("$(paths.chkconfig) --list $(preferred_services)","noshell");
     
      "unneeded_services" -> { "GEN003700", "GEN003860" }
         comment => "List of unneeded inetd/xinetd services to be disabled",
          handle => "stigs_vars_unneeded_services",
           slist => {
                     "bluetooth",
                     "irda",
                     "im_sensors",
                     "portmap",
                     "rawdevices",
                     "rpcgssd",
                     "rpcidmapd",
                     "rpcsvcgssd",
                     "sendmail",
                     "xinetd",
                     "finger",
                     "rlogind", # V-38602
                     "rshd", # V-38594
                     "rexecd", # V-38598
                     "telnet", # V-38587
                     "sound",
                     "NetworkManager",
                    };
     
      "$(unneeded_services)_initd_status" -> { "GEN003700", "GEN003860" } 
         comment => "List of service status of those unneeded services",
          handle => "stigs_vars_unneeded_initd_services_status",
          string => execresult("$(paths.chkconfig) --list $(unneeded_services)","noshell");
     
      "packages_to_install"
         comment => "List of packages to install",
          handle => "stigs_vars_packages_to_install",
           slist => {
                      "gnupg2",
                      "logwatch",
                      "net-tools",
                      "bind-utils",
                    };
     
      "packages_to_delete" -> { "V-38589", "V-38591" }
         comment => "List of packages to delete",
          handle => "stigs_vars_packages_to_delete",
           slist => {
                      "telnet-server", # V-38587
                      "rsh-server", # V-38591
                    };
         
      "rpm_config_files" -> { "V-38462" }
         comment => "List of RPM configuration files",
          handle => "stigs_vars_rpm_config_files",
           slist => {
                      "/etc/rpmrc", 
                      "/usr/lib/rpm/rpmrc", 
                      "/usr/lib/rpm/redhat/rpmrc", 
                      "/root/.rpmrc",
                    };
     
      "yum_repos_d_files" -> { "V-38462" }
         comment => "List of YUM repository files",
          handle => "stigs_vars_yum_repos_d_files",
           slist => lsdir("/etc/yum.repos.d", ".*\.repo", "true");

    (redhat|centos).have_systemd::

      "systemd_service_ext"
         comment => "List of system services types/file extensions",
          handle => "stigs_vars_systemd_service_ext",
           slist => {
                      "service", 
                      "target", 
                      "slice", 
                      "mount", 
                      "socket", 
                      "path", 
                      "timer",
                    };
      
      "$(preferred_services)_systemd_$(systemd_service_ext)_status" -> { "GEN002660" } 
         comment => "List of systemd $(systemd_service_ext) status of those preferred services",
          handle => "stigs_vars_preferred_systemd_statuses",
          string => execresult("$(paths.systemctl) is-active $(preferred_services).$(systemd_service_ext)","noshell");
      
      "$(unneeded_services)_systemd_$(systemd_service_ext)_status" -> { "GEN003700", "GEN003860" } 
         comment => "List of systemd $(systemd_service_ext) status of those unneeded services",
          handle => "stigs_vars_unneeded_systemd_statuses",
          string => execresult("$(paths.systemctl) is-active $(unneeded_services).$(systemd_service_ext)","noshell");
 
#

  classes:

    redhat|centos::

      "have_usr_partitioned" -> { "GEN001080" }
            comment => "Check if /usr is partitioned",
             handle => "stigs_classes_usr_partitioned", 
         expression => regcmp(".*/usr.*","$(fstab_contents)");
     
      "have_usr_$(shells)" -> { "GEN001080" }
            comment => "Check if there are any Root shells in $(usr_dir)",
             handle => "stigs_classes_shells_in_usr",
         expression => fileexists("$(usr_dir)/$(shells)");
     
      "do_$(hosts_related_files)" -> { "GEN002040" } 
         comment => "Check if the files are symlinks",
          handle => "stigs_classes_hosts_related_files",
             not => islink("$(hosts_related_files)");
     
      "$(allusers_not_root)_less_than_500" -> { "GEN002640" }
            comment => "Check if the UID less than 500 (System accounts)",
             handle => "stigs_classes_uid_less_than_500",
         expression => islessthan("$(uids[$(allusers_not_root)])","500");
     
      "have_xwindows" -> { "LNX00360" }
            comment => "Check if the machine has X windows installed",
             handle => "stigs_classes_have_xwindows",
         expression => fileexists("/etc/gdm/custom.conf");
     
      "$(preferred_services)_inactive_$(systemd_service_ext)" -> { "GEN002660" } 
            comment => "Check if those preferred service $(systemd_service_ext) are inactive or not",
             handle => "stigs_classes_preferred_systemd_inactive",
         expression => regcmp("^inactive$","$($(preferred_services)_systemd_$(systemd_service_ext)_status)");
     
      "$(preferred_services)_off" -> { "GEN002660" } 
            comment => "Check if those preferred services are on or not",
             handle => "stigs_classes_preferred_initd_services_off",
                not => regcmp(".*:on.*","$($(preferred_services)_initd_status)");
     
      "$(unneeded_services)_active_$(systemd_service_ext)" -> { "GEN003700", "GEN003860" } 
            comment => "Check if those unneeded targets are active or not",
             handle => "stigs_classes_unneeded_systemd_active",
         expression => regcmp("^active$","$($(unneeded_services)_systemd_$(systemd_service_ext)_status)");
     
      "$(unneeded_services)_on" -> { "GEN003700", "GEN003860" } 
            comment => "Check if those unneeded services are on or not",
             handle => "stigs_classes_unneeded_initd_services_on",
         expression => regcmp(".*:on.*","$($(unneeded_services)_initd_status)");
     
# for checking of installed software packets and available configuration files
     
      "have_syslog_conf" 
            comment => "Check if /etc/syslog.conf is available",
             handle => "stigs_classes_have_etc_syslog_conf",
         expression => fileexists("/etc/syslog.conf");
     
      "have_rsyslog_conf" 
            comment => "Check if /etc/rsyslog.conf is available",
             handle => "stigs_classes_have_etc_rsyslog_conf",
         expression => fileexists("/etc/rsyslog.conf");
     
#       "have_systemd_rsyslog_service"
#            comment => "Check if systemd rsyslog service is available",
#             handle => "stigs_classes_have_lib_systemd_system_systemd_rsyslog_service",
#         expression => fileexists("/lib/systemd/system/rsyslog.service");
     
       "have_init_d_rsyslog"
            comment => "Check if init.d rsyslog service is available",
             handle => "stigs_classes_have_init_d_rsyslog",
         expression => fileexists("/etc/init.d/rsyslog");
     
#       "have_systemd_syslog_service"
#            comment => "Check if systemd syslog service is available",
#             handle => "stigs_classes_have_lib_systemd_system_systemd_syslog_service",
#         expression => fileexists("/lib/systemd/system/syslog.service");
     
       "have_init_d_syslog"
            comment => "Check if init.d syslog service is available",
             handle => "stigs_classes_have_init_d_syslog",
         expression => fileexists("/etc/init.d/syslog");
     
#       "have_systemd" 
#            comment => "Check if the machine has systemd installed",
#              handle => "stigs_classes_have_lib_systemd",
#                 and => {
#                          isdir("/usr/lib/systemd"),
#                          isdir("/etc/systemd"),
#                          fileexists("$(paths.systemctl)"),
#                          fileexists("/usr/lib/systemd/systemd"),
#                        };
    
       "have_init_d"  
             comment => "Check if /etc/init.d is available",
              handle => "stigs_classes_have_etc_init_d",
          expression => isdir("/etc/init.d");
    
       "have_rc_d"  
             comment => "Check if /etc/rc.d is available",
              handle => "stigs_classes_have_etc_rc_d",
          expression => isdir("/etc/rc.d");
    
       "have_50_default_perms"
             comment => "Check if the machine has 50-default.perms",
              handle => "stigs_classes_have_have_50_default_perms",
         expression => fileexists("/etc/security/console.perms.d/50-default.perms");
    
       "have_50_audio_perms_rules"
            comment => "Check if the machine has 55-audio-perms.rules",
             handle => "stigs_classes_have_have_50_audio_perms_rules",
        expression => fileexists("/etc/udev/rules.d/55-audio-perms.rules");
    
       "have_avahi_autopid"
           comment => "Check if the machine has avahi-autopid",
            handle => "stigs_classes_have_var_lib_avahi_autopid",
        expression => fileexists("/var/lib/avahi-autoipd");
    
       "have_xinetd_d"
           comment => "Check if the machine has XINETD installed",
            handle => "stigs_classes_have_etc_xinetd_d",
        expression => isdir("/etc/xinetd.d");
    
       "have_xinetd_conf"
           comment => "Check if the machine has xinetd configuration is available",
            handle => "stigs_classes_have_etc_xinetd_conf",
        expression => fileexists("/etc/xinetd.conf");
    
       "have_snmpd_conf"
           comment => "Check if the machine has SNMP installed",
            handle => "stigs_classes_have_etc_snmp",
        expression => fileexists("/etc/snmp/snmpd.conf");
    
       "have_samba"
           comment => "Check if the machine has SAMBA installed",
            handle => "stigs_classes_have_etc_samba",
        expression => isdir("/etc/samba");
    
       "have_news"
           comment => "Check if the machine has NEWS installed",
            handle => "stigs_classes_have_etc_news",
        expression => isdir("/etc/news");
    
       "have_grub"
           comment => "Check if the machine has GRUB installed",
            handle => "stigs_classes_have_boot_grub_grub_conf",
        expression => fileexists("/boot/grub/grub.conf");
    
       "have_grub2"
           comment => "Check if the machine has GRUB2 installed",
            handle => "stigs_classes_have_etc_default_grub",
        expression => fileexists("/etc/default/grub");
    
#       "have_lilo_conf"
#           comment => "Check if LILO configuration is available",
#            handle => "stigs_classes_have_etc_lilo_conf",
#        expression => fileexists("/etc/lilo.conf");
    
       "have_ctrl_alt_del_target"
           comment => "Check if ctrl-alt-del.target is available",
            handle => "stigs_classes_have_etc_systemd_system_ctrl_alt_del_target",
        expression => fileexists("/etc/systemd/system/ctrl-alt-del.target");
    
       "have_inittab"
           comment => "Check if ctrl-alt-del.target is available",
            handle => "stigs_classes_have_etc_inittab",
        expression => fileexists("/etc/inittab");
    
       "have_sysctl_d"
           comment => "Check if /etc/sysctl.d is available",
            handle => "stigs_classes_have_etc_sysctl_d",
        expression => isdir("/etc/sysctl.d");
    
       "have_99_sysctl_conf"
           comment => "Check if /etc/sysctl.d/99-sysctl.conf is available",
            handle => "stigs_classes_have_etc_sysctl_d_99_sysctl_conf",
               not => islink("/etc/sysctl.d/99-sysctl.conf");
    
       "have_sysctl_conf"
           comment => "Check if /etc/sysctl.conf is available",
            handle => "stigs_classes_have_etc_sysctl_conf",
        expression => fileexists("/etc/sysctl.conf");
     
       "have_sendmail_cf"
           comment => "Check if /etc/mail/sendmail.cf is available",
            handle => "stigs_classes_have_etc_mail_sendmail_cf",
        expression => fileexists("/etc/mail/sendmail.cf");
     
       "have_init_d_sendmail"
           comment => "Check if init.d sendmail service is available",
            handle => "stigs_classes_have_init_d_sendmail",
        expression => fileexists("/etc/init.d/sendmail");
     
       "have_init_d_postfix"
           comment => "Check if init.d postfix service is available",
            handle => "stigs_classes_have_init_d_postfix",
        expression => fileexists("/etc/init.d/postfix");
     
       "have_init_d_sshd"
           comment => "Check if init.d sshd service is available",
            handle => "stigs_classes_have_init_d_sshd",
        expression => fileexists("/etc/init.d/sshd");
     
       "have_$(security_iptables_tools)"
           comment => "Check if security iptables tools are available",
            handle => "stigs_classes_have_security_iptables_tools",
        expression => fileexists($(security_iptables_tools));
     
       "have_$(security_services_config_files)"
           comment => "Check if security tools are available",
            handle => "stigs_classes_have_security_services_config_files",
        expression => fileexists($(security_services_config_files));
    
       "have_xinet_d_tftp"
           comment => "Check if xinetd tftp service is available",
            handle => "stigs_classes_have_xinet_d_tftp",
        expression => fileexists("/etc/xinetd.d/tftp");
    
       "have_systemd_tftp_service"
           comment => "Check if systemd tftp service is available",
            handle => "stigs_classes_have_systemd_tftpservice",
        expression => fileexists("/lib/systemd/system/tftp.service");
    
       "have_$(rpm_config_files)"
           comment => "Check if RPM configuration files are available",
            handle => "stigs_classes_have_rpm_config_files",
        expression => fileexists($(rpm_config_files));
     
       "have_$(pam_files)"
           comment => "Check if rhost PAM files are available",
            handle => "stigs_classes_have_pam_files",
        expression => fileexists($(pam_files));
     
       "have_$(cron_files)"
           comment => "Check if cron files are available",
            handle => "stigs_classes_have_cron_files",
        expression => fileexists($(cron_files));
     
       "have_var_spool_at_spool"
           comment => "Check if /var/spool/at/spool/ is available",
            handle => "stigs_classes_have_var_spool_at_spool",
        expression => isdir("/var/spool/at/spool/");
 

  files:

    redhat|centos::
  
      "/etc/syslog.conf" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
           comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
            handle => "stigs_files_etc_syslog_conf",
             perms => mog("640","root","root"),
         edit_line => stigs_maintain_syslog_conf,
           classes => if_repaired("restart_syslog"),
        ifvarclass => "have_syslog_conf";
     
      "/etc/rsyslog.conf" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
           comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
            handle => "stigs_files_etc_rsyslog_conf",
             perms => mog("640","root","root"),
         edit_line => stigs_maintain_syslog_conf,
           classes => if_repaired("restart_syslog"),
        ifvarclass => "have_rsyslog_conf";
     
# rescue.target requires automaticaly root password at Redhat7/Centos7 and solves "GEN000020", "GEN000040", "GEN000060"
    
      "/etc/systemd/system/ctrl-alt-del.target" -> { "LNX00580" }
           comment => "CAT I & II (Previously - L222) UNIX STIG: 2.5.1.1 System Equipment, 12.14 Disable ctrl-alt-del",
            handle => "stigs_files_etc_systemd_disable_ctrl_alt_delete",
         link_from => ln_s("/dev/null"),
           classes => if_repaired("reload_systemd"),
        ifvarclass => "have_ctrl_alt_del_target";
     
      "/etc/inittab" -> { "GEN000020", "GEN000040", "GEN000060", "LNX00580" }
           comment => "CAT I & II (Previously - G001, G002, G003, L222) UNIX STIG: 2.5.1.1 System Equipment, 12.14 The /etc/inittab File",
            handle => "stigs_files_etc_inittab",
         edit_line => stigs_maintain_inittab,
           classes => if_repaired("restart_inittab"),
        ifvarclass => "have_inittab";
     
      "/etc/pam.d/system-auth-ac" -> { "GEN000460", "GEN000600", "GEN000620", "GEN000640", "GEN000800" }
               comment => "CAT II (Previously - G013, G019, G606) UNIX STIG: 3.1.3 Account Access, 3.2.1 Password Guidelines",
                handle => "stigs_files_etc_pam_d_system_auth",
         edit_defaults => empty,
             edit_line => stigs_maintain_system_auth;
     
      "/usr/share/authconfig/authconfig.py"
         comment => "CAT II (Previously - G013) UNIX STIG: 3.1.3 Accounnt Access",
          handle => "stigs_files_usr_sbin_authconfig",
           perms => m("ugo-x");
      
      "/etc/login.defs" -> { "GEN000480", "GEN000540", "GEN000580", "GEN000700" }
           comment => "CAT II (Previously - G004, G019, G020) UNIX STIG: 3.1.3 Account Access, 3.2.1 Password Guidelines",
            handle => "stigs_files_etc_login_defs",
         edit_line => stigs_maintain_login_defs;
      
      "/etc/profile" -> { "GEN000500" }
           comment => "CAT II (Previously - G605) UNIX STIG: 3.1.4 Inactivity Timeout/Locking",
            handle => "stigs_vars_etc_profile",
         edit_line => stigs_maintain_etc_profile;
     
      "/root" -> { "GEN000920" }
         comment => "CAT II (Previously - G023) UNIX STIG: 3.3 Root Account",
          handle => "stigs_files_root_dir",
           perms => mog("700","root","root");
     
      "/" -> { "GEN000920" }
              comment => "CAT II (Previously - G023) UNIX STIG: 3.3 Root Account",
               handle => "stigs_files_not_root_and_tmp_dir",
         depth_search => recurse("1"),
          file_select => stigs_only_dir_exclude2("root","tmp"),
                perms => mog("755","root","root");
      
      "/etc/securetty" -> { "GEN000980", "LNX00620", "LNX00640", "LNX00660" }
             comment => "CAT II UNIX STIG: 3.3 Root Account, 12.17 The /etc/securetty File",
              handle => "stigs_files_etc_securetty",
               perms => mog("640","root","root"),
       edit_defaults => empty,
           edit_line => stigs_maintain_securetty;
     
      "/etc/pam.d/sshd" -> { "GEN001020" }
           comment => "CAT II UNIX STIG: 3.3 Root Account",
            handle => "stigs_files_etc_pamd_sshd",
         edit_line => stigs_maintain_pamd_sshd;
     
      "/etc/pam.d/login" -> { "GEN001020" }
           comment => "CAT II UNIX STIG: 3.3 Root Account",
            handle => "stigs_files_etc_pamd_login",
         edit_line => stigs_maintain_pamd_login;
     
      "/etc/security/access.conf" -> { "GEN001020", "LNX00400", "LNX00420", "LNX00440" }
           comment => "CAT II (Previously - L044, L045, L046) UNIX STIG: 3.3 Root Account, 12.11 Console Access ",
            handle => "stigs_files_etc_security_access_conf",
             perms => mog("640","root","root"),
         edit_line => stigs_maintain_security_access_conf;
     
      "$(usr_dir)/$(shells)" -> { "GEN001080" }
            comment => "CAT III, (Previously - G229) UNIX STIG: 3.3 Root Account",
             handle => "stigs_files_usr_bin_root_shells",
             rename => disable,
         ifvarclass => "have_usr_partitioned.have_usr_$(shells)";
     
      "$(usr_dir)/$(shells).cfdisabled" -> { "GEN001080" }
         comment => "CAT III, (Previously - G229) UNIX STIG: 3.3 Root Account",
          handle => "stigs_files_usr_bin_root_shells_cfdisabled",
           perms => mog("400","root","root");
     
      "/etc/passwd" -> { "GEN001080", "GEN001380", "GEN001400" }
           comment => "CAT I && III (Previously - G047, G048, G229) UNIX STIG: 3.3 Root Account, 3.4 File and Directory Controls",
            handle => "stigs_files_set_root_shell",
             perms => mog("644", "root","root"),
         edit_line => set_user_field("root","7","/bin/bash");
     
      "/etc/group" -> { "GENxxxxxx" }
           comment => "CAT II (V-38459) UNIX STIG: 3.3 Root Account, 3.4 File and Directory Controls",
            handle => "stigs_files_set_etc_group_permissions",
             perms => mog("644", "root","root");
    
      "/etc/ssh/sshd_config" -> { "GEN001120", "GEN005500", "GEN005540" }
           comment => "CAT I & II (Previously - G500, G701) UNIX STIG: 3.3.1 Encrypted Root Access, 4.15 Secure Shell (SSH) and Equivalents",
            handle => "stigs_files_etc_ssh_sshd_config",
         edit_line => stigs_maintain_sshd_config,
           classes => if_repaired("restart_sshd");
     
      "$(network_services_daemon_files)" -> { "GEN001180" }
            comment => "CAT II (Previously - G036) UNIX STIG: 3.4 File and Directory Controls",
             handle => "stigs_files_network_services_daemon_files",
        file_select => ex_list(@(security_iptables_tools)),
              perms => m("755");
      
      "$(system_log_files)" -> { "GEN001260", "GEN002700" }
              comment => "CAT I & II (Previously - G095) UNIX STIG: 3.4 File and Directory Controls, 3.16 Audit Requirements",
               handle => "stigs_files_system_log_files",
         depth_search => recurse("inf"),
          file_select => stigs_exclude2("cron.*","audit"),
                perms => m("600");
      
      "$(manual_page_files)" -> { "GEN001280" }
              comment => "CAT III, UNIX STIG: 3.4 File and Directory Controls",
               handle => "stigs_files_manual_page_files",
         depth_search => recurse("inf"),
                perms => m("644");
     
      "/etc/shadow" -> { "GEN001400", "GEN001420" }
         comment => "CAT I (Previously - G047) UNIX STIG: 3.4 File and Directory Controls",
          handle => "stigs_files_etc_shadow",
           perms => mog("400","root","root");
     
      "/home/$(users_list)/." -> { "GEN001440", "GEN001460", "GEN001480", "GEN001500", "GEN001520", "GEN001540", "GEN001560" }
              comment => "CAT II & III & IV, (Previously - G051, G052, G053, G054, G055, G067, G068) UNIX STIG: 3.5, 3.6 Home Directories and User Files",
               handle => "stigs_files_home_users",
               create => "true",
         depth_search => recurse("inf"),
                perms => mo("700","$(users_list)");
    
      "/var/lib/avahi-autoipd/." -> { "GEN001460" }
         comment => "CAT IV (Previously - G052) UNIX STIG: 3.5 Home Directories",
          handle => "stigs_files_var_lib_avahi_autoipd",
          create => "true",
           perms => m("644");
     
      "$(umask_files)" -> { "GEN001560", "GEN002560" }
           comment => "CAT II (Previously - G068, G089), UNIX STIG: 3.6 User Files, 3.13 Umask",
            handle => "stigs_files_etc_bashrc",
         edit_line => stigs_maintain_umask("077");
     
     
      "$(rc_files)" -> { "GEN001580", "GEN001620", "GEN001660", "GEN001680" }
         comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Run Control Scripts ownership and permissions",
          handle => "stigs_files_rc_files",
           perms => mog("755","root","root");
     
      "/etc/init.d/.*" -> { "GEN001580", "GEN001620", "GEN001660", "GEN001680" }
          comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Run Control Scripts ownership and permissions",
           handle => "stigs_files_run_control_scripts_etc_initd",
            perms => mog("755","root","root"),
       ifvarclass => "have_init_d";
     
      "/etc/rc.d/init.d" -> { "GEN001580", "GEN001620", "GEN001660", "GEN001680" }
              comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Run Control Scripts ownership and permissions",
               handle => "stigs_files_run_control_scripts_etc_rcd_initd",
         depth_search => recurse("1"),
          file_select => exclude("iptables"),
                perms => mog("755","root","root"),
           ifvarclass => "have_rc_d";
     
      "$(global_init_files)" -> { "GEN001720", "GEN001740", "GEN001760", "GEN001780" }
           comment => "CAT II (Previously - G112) UNIX STIG: 3.8.1 Global Initialization Files",
            handle => "stigs_files_global_init_files",
         edit_line => append_if_no_line("mesg n"),
             perms => mog("644","root","root");
     
      "$(skeleton_dot_files)" -> { "GEN001800", "GEN001820" }
         comment => "CAT II (Previously - G038) UNIX STIG: 3.8.1 Global Initialization Files",
          handle => "stigs_files_skeleton_dot_files",
           perms => mog("644","root","root");
     
      "$(hosts_related_files)" -> { "GEN002040" }
            comment => "CAT I UNIX STIG: 3.9 Trusted System/System Access Control Files",
             handle => "stigs_files_remove_and_symlink_hosts_related_files",
             delete => tidy,
          link_from => ln_s("/dev/null"),
         ifvarclass => canonify("do_$(hosts_related_files)");  
     
      "$(pam_files)" -> { "GEN002100" }
           comment => "CAT II UNIX STIG: 3.9 Trusted System/System Access Control Files",
            handle => "stigs_files_pam_files",
         edit_line => comment_lines_matching("^auth.*pam_rhosts_auth.so","#"),
        ifvarclass => canonify("have_$(pam_files)");
     
      "/etc/shells" -> { "GEN002120" }
               comment => "CAT II (Previously - G069) UNIX STIG: 3.10 Shells",
                handle => "stigs_files_etc_shells",
                create => "true",
         edit_defaults => empty,
                 perms => mog("644","root","root"),
             edit_line => stigs_maintain_etc_shells;
     
      "$(shell_files)" -> { "GEN002160", "GEN002180", "GEN002200", "GEN002220" }
         comment => "CAT I & II (Previously - G072, G073, G074, G075) UNIX STIG: 3.10 Shells",
          handle => "stigs_files_shell_files",
           perms => mog("0755","root","root");
     
      "/etc/security/console.perms.d/50-default.perms" -> { "GEN002320" }
          comment => "CAT II (Previously - G501) UNIX STIG: 3.11 Device Files",
            handle => "stigs_files_security_default_perms",
         edit_line => stigs_remove_audio_devices,
        ifvarclass => "have_50_default_perms";
     
      "/etc/udev/rules.d/55-audio-perms.rules" -> { "GEN002320", "GEN002340", "GEN002360" }
           comment => "CAT II (Previously - G501, G502, G504) UNIX STIG: 3.11 Device Files",
            handle => "stigs_files_audio_perms_rules",
            create => "true",
         edit_line => stigs_maintain_audio_devices,
        ifvarclass => "have_50_audio_perms_rules";
     
      "/var/cfengine/state/cf_incoming.*" -> { "GEN002480" }
         comment => "CAT II (Previously - G079) UNIX STIG: 3.12.3 Stick Bit",
          handle => "stigs_files_cf_incoming_files",
           perms => m("600");
     
      "/etc/passwd" -> { "GEN002640", "GEN005000" }
            comment => "CAT I & II (Previously - G649, G092) UNIX STIG: 3.15 Default Accounts, 4.8.1 FTP Configuration",
             handle => "stigs_files_default_accounts_shell",
          edit_line => set_user_field("$(allusers_not_root)","7","/sbin/nologin"),
         ifvarclass => "$(allusers_not_root)_less_than_500";
     
      "/etc/passwd" -> { "GEN002640" }
            comment => "CAT II (Previously - G092) UNIX STIG: 3.15 Default Accounts",
             handle => "stigs_files_default_accounts_shell_for_badnaming_users",
          edit_line => set_user_field("avahi-autoipd","7","/sbin/nologin");
      
      "/etc/audit/audit.rules" -> { "GEN002660", "GEN002700", "GEN002720", "GEN002740", "GEN002760", "GEN002780", "GEN002800", "GEN002820", "GEN002840" }
                comment => "CAT I (Previously - G093, G095, G100-G106) UNIX STIG: 3.16 Audit Requirements",
                 handle => "stigs_files_etc_audit_audit_rules",
                  perms => m("640"),
          edit_defaults => empty,
              edit_line => stigs_maintain_audit_rules;
     
      "/var/log/audit" -> { "GEN002680" }
         comment => "CAT II (Previously - G094) UNIX STIG: 3.16 Audit Requirements",
          handle => "stigs_files_var_log_audit",
           perms => m("700");
     
      "/etc/logrotate.d/audit" -> { "GEN002860" }
                comment => "CAT II (Previously - G674) UNIX STIG: 3.16 Audit Requirements",
                 handle => "stigs_files_logrotated_audit",
                 create => "true",
                  perms => mog("644","root","root"),
          edit_defaults => empty,
              edit_line => stigs_maintain_logrotated_audit;
      
      "/etc/cron.deny" -> { "GEN002960", "GEN003060", "GEN003200", "GEN003260" }
               comment => "CAT II (Previously - G620, G623) UNIX STIG: 3.17.3 Restrictions",
                handle => "stigs_files_etc_cron_deny",
                create => "true",
                 perms => mog("600","root","root"),
         edit_defaults => empty,
             edit_line => append_if_no_line("ALL");
      
      "/etc/cron.allow" -> { "GEN002960", "GEN002980","GEN003060", "GEN003240" }
               comment => "CAT II (Previously - G622) UNIX STIG: 3.17.3 Restrictions",
                handle => "stigs_files_etc_cron_allow",
                create => "true",
                 perms => mog("600","root","root"),
         edit_defaults => empty,
             edit_line => stigs_maintain_cron_allow("@(jb_STIGs.cron_users)");
      
      "$(cron_dirs)" -> { "GEN003040", "GEN003080" }
               comment => "CAT II (Previously - G205) UNIX STIG: 3.17.3 Restrictions",
                handle => "stigs_files_cron_dirs_600",
          depth_search => recurse("inf"),
                 perms => mog("600","root","root");
     
      "$(other_cron_dirs)" -> { "GEN003040", "GEN003080" }
               comment => "CAT II (Previously - G205) UNIX STIG: 3.17.3 Restrictions",
                handle => "stigs_files_other_cron_dirs_700",
          depth_search => recurse("inf"),
                 perms => mog("700","root","root");
     
      "$(cron_files)" -> { "GEN003040", "GEN003080" }
          comment => "CAT II (Previously - G205) UNIX STIG: 3.17.3 Restrictions",
           handle => "stigs_files_other_cron_files",
            perms => mog("600","root","root"),
       ifvarclass => canonify("have_$(cron_files)");
     
      "/etc" -> { "GEN003100", "GEN003120", "GEN003140" }
              comment => "CAT II (Previously - G206, G207) UNIX STIG: 3.17.3 Restrictions",
               handle => "stigs_files_cron_dirs_755",
         depth_search => recurse("1"),
          file_select => stigs_cron_dirs,
                perms => mog("755","root","root");
     
      "/var/spool" -> { "GEN003100", "GEN003120", "GEN003140" }
              comment => "CAT II (Previously - G206, G207) UNIX STIG: 3.17.3 Restrictions",
               handle => "stigs_files_other_cron_dirs_755",
         depth_search => recurse("1"),
          file_select => stigs_cron_dirs,
                perms => mog("755","root","root");
     
      "/var/log/cron.*" -> { "GEN003180" }
         comment => "CAT II (Previously - G210) UNIX STIG: 3.17.3 Restrictions",
          handle => "stigs_files_var_log_cron",
           perms => mog("600","root","root");
     
      "/etc/at.deny" -> { "GEN003280", "GEN003300", "GEN003320", "GEN003340", "GEN003480" }
           comment => "CAT II (Previously - G211, G212, G213, G214, G630) UNIX STIG: 3.18.3 Restrictions",
            handle => "stigs_files_etc_at_deny_all_not_root",
            create => "true",
             perms => mog("600","root","root"),
         edit_line => append_if_no_lines("@(jb_STIGs.at_deny_users)");
     
      "/etc/at.allow" -> { "GEN003320", "GEN003340", "GEN003460" }
               comment => "CAT II (Previously - G213, G214, G629) UNIX STIG: 3.18.3 Restrictions",
                handle => "stigs_files_etc_at_allow",
                create => "true",
                 perms => mog("600","root","root"),
         edit_defaults => empty,
             edit_line => stigs_maintain_at_allow;
     
      "/var/spool/at/spool/" -> { "GEN003400", "GEN003420" }
         comment => "CAT II (Previously - G625, G626) UNIX STIG: 3.18.3 Restrictions",
          handle => "stigs_files_var_spool_at_spool",
           perms => mog("755","root","root"),
        ifvarclass => "have_var_spool_at_spool";
     
      "/etc/security/limits.conf" -> { "GEN003500" }
         comment => "CAT III UNIX STIG: 3.20.1 Restrict/Disable Core Dumps",
          handle => "stigs_files_etc_security_limits_conf",
         edit_line => append_if_no_line("* - core 0");
     
      "/var/crash" -> { "GEN003520" }
         comment => "CAT III UNIX STIG: 3.20.1 Restrict/Disable Core Dumps",
          handle => "stigs_files_var_crash",
           perms => mog("700","root","root");
      
# moved to external file
#   
#      "/etc/sysctl.conf" -> { "GEN003600", "GEN005600", "LNX00480", "LNX00500","LNX00520" }
#           comment => "CAT II (Previously - L204, L206, L208) UNIX STIG: 3.20.5 Network Security Settings, 12.12 Kernel Configuration File",
#            handle => "stigs_files_etc_sysctl_conf",
#             perms => mog("600","root","root"),
#         edit_line => stigs_maintain_sysctl_conf,
#           classes => if_repaired("restart_sysctl"),
#       ifvarclass => "have_sysctl_conf";
#   
#      "/usr/lib/sysctl.d/99-sysctl.conf" -> { "GEN003600", "GEN005600", "LNX00480", "LNX00500","LNX00520" }
#           comment => "CAT II (Previously - L204, L206, L208) UNIX STIG: 3.20.5 Network Security Settings, 12.12 Kernel Configuration File",
#            handle => "stigs_files_etc_sysctl_d_99_sysctl_conf",
#             perms => mog("600","root","root"),
#         edit_line => stigs_maintain_sysctl_conf,
#           classes => if_repaired("restart_systemd_sysctl"),
#       ifvarclass => "have_99_sysctl_conf";
     
      "/usr/lib/sysctl.d" -> { "GEN003600", "GEN005600", "LNX00480", "LNX00500","LNX00520" }
           comment => "CAT II (Previously - L204, L206, L208) UNIX STIG: 3.20.5 Network Security Settings, 12.12 Kernel Configuration Files directory",
            handle => "stigs_files_etc_sysctl_d",
             perms => mog("700","root","root"),
        ifvarclass => "have_sysctl_d";
     
      "/etc/xinetd.d" -> { "GEN003720", "GEN003740" }
           comment => "CAT II (Previously - G107, G108) UNIX STIG: 4 Network Services",
            handle => "stigs_files_etc_xinetdd_dir",
             perms => mog("755","root","root"),
        ifvarclass => "have_xinetd_d";
     
      "/etc/xinetd.d" -> { "GEN003720" }
            comment => "CAT II (Previously - G107) UNIX STIG: 4 Network Services",
             handle => "stigs_files_etc_xinetd_files",
       depth_search => recurse("inf"),
              perms => mog("644","root","root"),
         ifvarclass => "have_xinetd_d";
     
      "/etc/xinetd.conf" -> { "GEN003720", "GEN003740" }
          comment => "CAT II (Previously - G107, G108) UNIX STIG: 4 Network Services",
           handle => "stigs_files_etc_xinetd_conf",
            perms => mog("440","root","root"),
       ifvarclass => "have_xinetd_conf";
     
      "/etc/services" -> { "GEN003760", "GEN003780" }
         comment => "CAT II (Previously - G109, G110) UNIX STIG: 4 Network Services",
          handle => "stigs_files_etc_services",
           perms => mog("644","root","root");
     
      "/usr/bin/finger" -> { "GEN003860" }
         comment => "CAT II (Previously - V046) UNIX STIG: 4.3 Finger",
          handle => "stigs_files_user_bin_finger",
          rename => disable;
     
      "/usr/sbin/tcpdump" -> { "GEN003865" }
         comment => "CAT II, UNIX STIG: 4.3 TCPDump",
          handle => "stigs_files_user_sbin_tcpdump",
          rename => disable;
      
      "/bin/traceroute" -> { "GEN003960", "GEN003980", "GEN004000" }
         comment => "CAT II (Previously - G631, G632, G633) UNIX STIG: 4.5 Traceroute",
          handle => "stigs_files_bin_traceroute",
           perms => mog("700","root","root");
     
      "/etc/aliases" -> { "GEN004360", "GEN004380", "GEN004640" }
           comment => "CAT I & II (Previously - G127, G128, V126) UNIX STIG: 4.7 Sendmail or Equivalent",
            handle => "stigs_files_etc_aliases",
             perms => mog("644","root","root"),
         edit_line => comment_lines_matching("decode:\h+root","#"),
           classes => if_repaired("restart_aliases");
     
# collision with unneeded services ?!
#      "/etc/mail/sendmail.cf" -> { "GEN004440", "GEN004540", "GEN004560" }
#           comment => "CAT II & IV (Previously - G133, G646) UNIX STIG: 4.7 Sendmail or Equivalent",
#            handle => "stigs_files_etc_mail_sendmail_cf",
#         edit_line => stigs_maintain_sendmail,
#           classes => if_repaired("restart_sendmail"),
#        ifvarclass => "have_sendmail_cf";
     
      "/var/log/maillog" -> { "GEN004480", "GEN004500" }
         comment => "CAT II (Previously - G135, G136) UNIX STIG: 4.7 Sendmail or Equivalent",
          handle => "stigs_files_var_log_maillog",
           perms => mog("600","root","root");
     
      "$(home_list)/.forward" -> { "GEN004580" }
         comment => "CAT I (Previously - G647) UNIX STIG: 4.7 Sendmail or Equivalent",
          handle => "stigs_files_home_dot_forward",
          delete => tidy;
     
      "/etc/ftpusers" -> { "GEN004880", "GEN004920", "GEN004940" }
         comment => "CAT II (Previously - G140, G142, G143) UNIX STIG: 4.8.1 FTP Configuration",
          handle => "stigs_files_etc_ftpusers",
          create => "true",
           perms => mo("640","root");
     
      "/etc/ftpusers" -> { "GEN004900" }
             comment => "CAT II (Previously - G141) UNIX STIG: 4.8.1 FTP Configuration",
              handle => "stigs_files_editing_etc_ftpusers",
           edit_line => stigs_maintain_ftpusers("$(allusers_not_root)"),
          ifvarclass => "$(allusers_not_root)_less_than_500";
     
      "/etc/snmp/snmpd.conf" -> { "GEN005320", "GEN005360", "V-38653" }
          comment => "CAT I () UNIX STIG: Disabling default settings SNMP to prevent querying of different system aspects and to prevent unauthorized knowledge of the system",
           handle => "stigs_files_etc_snmp_snmpd_conf",
            perms => mog("600","root","root"),
        edit_line => stigs_maintain_snmpd_conf_comment_out_default_settings,
          classes => if_repaired("restart_snmpd"),
       ifvarclass => "have_snmpd_conf";
     
      "/etc/ssh/ssh_config" -> { "GEN005500" }
           comment => "CAT I UNIX STIG: 4.15 Secure Shell (SSH) and Equivalents",
            handle => "stigs_files_etc_ssh_ssh_config",
         edit_line => stigs_maintain_ssh_config;
     
      "/etc/ssh/ssh_banner" -> { "GEN005540" }
               comment => "CAT II UNIX STIG: 4.15 Secure Shell (SSH) and Equivalents",
                handle => "stigs_files_etc_ssh_ssh_banner",
                create => "true",
                 perms => mog("640","root","root"), 
         edit_defaults => empty,
             edit_line => stigs_create_ssh_banner;
     
      "/etc/exports" -> { "GEN005740", "GEN005760", "V-38677" }
         comment => "CAT II & III (Previously - G178, G179) UNIX STIG: 4.20 Network Filesystem (NFS)",
          handle => "stigs_files_etc_export",
       edit_line => stigs_maintain_etc_exports_remove_insecure_locks,
           perms => mog("644","root","root");
     
      "/etc/samba/smb.conf" -> { "GEN006100", "GEN006120", "GEN006140" }
          comment => "CAT II (Previously - L050, L051, L052) UNIX STIG: 4.24 Samba",
           handle => "stigs_files_etc_samba_smb_conf",
            perms => mog("644","root","root"),
       ifvarclass => "have_samba";
     
      "/usr/bin/smbpasswd" -> { "GEN006160", "GEN006180", "GEN006200" }
          comment => "CAT II (Previously - L054, L055, L056) UNIX STIG: 4.24 Samba",
           handle => "stigs_files_usr_bin_smbpasswd",
            perms => mog("600","root","root"),
       ifvarclass => "have_samba";
     
      "/etc/news/hosts.nntp" -> { "GEN006260" }
          comment => "CAT II (Previously - L154) UNIX STIG: 4.25 Internet Network News (INN)",
           handle => "stigs_files_etc_news_hosts_nttp",
            perms => m("600"),
       ifvarclass => "have_news";
     
      "/etc/news/hosts.nntp.nolimit" -> { "GEN006280" }
          comment => "CAT II (Previously - L156) UNIX STIG: 4.25 Internet Network News (INN)",
           handle => "stigs_files_etc_news_hosts_nttp_nolimit",
            perms => m("600"),
       ifvarclass => "have_news";
     
      "/etc/news/nnrp.access" -> { "GEN006300" }
          comment => "CAT II (Previously - L158) UNIX STIG: 4.25 Internet Network News (INN)",
           handle => "stigs_files_etc_news_nnrp_access",
            perms => m("600"),
       ifvarclass => "have_news";
     
      "/etc/news/passwd.nntp" -> { "GEN006320" }
          comment => "CAT II (Previously - L160) UNIX STIG: 4.25 Internet Network News (INN)",
           handle => "stigs_files_etc_news_passwd_nntp",
            perms => m("600"),
       ifvarclass => "have_news";
     
      "/etc/news" -> { "GEN006340", "GEN006360" }
              comment => "CAT II (Previously - L162, L164) UNIX STIG: 4.25 Internet Network New (INN)",
               handle => "stigs_files_etc_news",
         depth_search => recurse("inf"),
                perms => og("root","root"),
           ifvarclass => "have_news";
     
      "$(security_iptables_tools)" -> { "GEN006520" }
           comment => "CAT II (Previously - G189) UNIX STIG: 6 UNIX Security Tools",
            handle => "stigs_files_security_iptables_tools",
             perms => mog("740","root","root"),
        ifvarclass => canonify("have_$(security_iptables_tools)");
     
      "$(security_services_config_files)" -> { "GEN006520" }
           comment => "CAT II (Previously - G189) UNIX STIG: 6 UNIX Security Tools config files",
            handle => "stigs_files_security_services_config_files",
             perms => mog("600","root","root"),
        ifvarclass => canonify("have_$(security_services_config_files)");
     
      "/etc/hosts.allow" -> { "GEN006620" }
           comment => "CAT II UNIX STIG: 6.6 Access Control Programs and TCP_WRAPPERS",
            handle => "stigs_files_etc_hosts_allow",
         edit_line => append_if_no_lines("@(jb_STIGs.hosts_allow)");
      
      "/etc/hosts.deny" -> { "GEN006620" }
           comment => "CAT II UNIX STIG: 6.6 Access Control Programs and TCP_WRAPPERS",
            handle => "stigs_files_etc_hosts_deny",
         edit_line => append_if_no_line("ALL: ALL");
     
#      "/boot/grub/menu.lst" -> { "LNX00140" }
#           comment => "CAT I (Previously - L072) UNIX STIG: 12.4.1.1 Password Protecting the GRUB Console Boot Loader",
#            handle => "stigs_files_boot_grub_menu_lst",
#         edit_line => stigs_maintain_grub,
#        ifvarclass => "have_grub";
     
#      "/etc/default/grub" -> { "LNX00140" }
#           comment => "CAT I (Previously - L072) UNIX STIG: 12.4.1.1 Password Protecting the GRUB 2 Console Boot Loader",
#            handle => "stigs_files_etc_default_grub",
#         edit_line => stigs_maintain_grub2,
#        ifvarclass => "have_grub2";
     
      "/boot/grub/grub.conf" -> { "LNX00160" }
          comment => "CAT II (Previously - L074) UNIX STIG: 12.4.1.1 Protecting access to GRUB configuration file",
           handle => "stigs_files_boot_grub_grub_conf",
            perms => m("600"),
       ifvarclass => "have_grub";
     
      "/etc/default/grub" -> { "LNX00160" }
          comment => "CAT II (Previously - L074) UNIX STIG: 12.4.1.1 Protecting access to GRUB2 configuration file",
           handle => "stigs_files_etc_default_grub",
            perms => m("600"),
       ifvarclass => "have_grub2";
     
#      "/etc/lilo.conf" -> { "LNX00220" }
#          comment => "CAT II (Previously - L080) UNIX STIG: 12.4.1.2 Protecting access to LILO configuration file",
#           handle => "stigs_files_etc_lilo_conf",
#            perms => m("600"),
#       ifvarclass => "have_lilo_conf";
     
      "/etc/gdm/custom.conf" -> { "LNX00360" }
            comment => "CAT II (Previously - L032) UNIX STIG: 12.10 X Windows",
             handle => "stigs_files_etc_gdm_custom_conf",
          edit_line => stigs_maintain_gdm_custom_conf,
         ifvarclass => "have_xwindows";
     
      "/etc/systemd"
             comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Systemd files ownership and permissions",
              handle => "stigs_files_etc_systemd_files",
        depth_search => recurse("inf"),
         file_select => stigs_systemd_conf_files_select,
               perms => mog("644","root","root"),
          ifvarclass => "have_systemd";
     
      "/etc/systemd"
             comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Systemd files ownership and permissions",
              handle => "stigs_files_etc_systemd_dirs",
        depth_search => recurse("inf"),
         file_select => dirs,
               perms => mog("755","root","root"),
          ifvarclass => "have_systemd";
     
      "/usr/lib/systemd/system"
             comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Systemd files ownership and permissions",
              handle => "stigs_files_usr_lib_systemd_system_files",
        depth_search => recurse("inf"),
         file_select => stigs_systemd_conf_files_select,
               perms => mog("644","root","root"),
          ifvarclass => "have_systemd";
     
      "/usr/lib/systemd"
             comment => "CAT I & II (Previously - G058, G061, G611, G612) UNIX STIG: 3.7 Systemd files ownership and permissions",
              handle => "stigs_files_usr_lib_systemd_dirs",
        depth_search => recurse("inf"),
         file_select => dirs,
               perms => mog("755","root","root"),
          ifvarclass => "have_systemd";
     
      "/etc/xinetd.d/tftp"
           comment => "CAT I (V-38701) UNIX STIG: The TFTP daemon must operate in secure mode which provides access only to a single directory on the host file system",
            handle => "stigs_files_etc_xinet_d_tftp",
         edit_line => stigs_maintain_xinet_d_tftp,
        ifvarclass => "have_xinet_d_tftp";
     
      "/usr/lib/systemd/system/tftp.service"
           comment => "CAT I (V-38701) UNIX STIG: The TFTP daemon must operate in secure mode which provides access only to a single directory on the host file system",
            handle => "stigs_files_usr_lib_systemd_system_tftp_service",
         edit_line => stigs_maintain_systemd_tftp_service,
        ifvarclass => "have_systemd_tftp_service";
     
      "$(rpm_config_files)" -> { "V-38462" }
           comment => "CAT I V-38462) UNIX STIG: The RPM package management tool must cryptographically verify the authenticity of all software packages during installation",
            handle => "stigs_files_rpm_config_files",
         edit_line => stigs_maintain_rpm_config_files_remove_nosignature,
        ifvarclass => canonify("have_$(rpm_config_files)");
     
      "$(yum_repos_d_files)" -> { "V-38462" }
           comment => "CAT I V-38462) UNIX STIG: The YUM package management tool must cryptographically verify the authenticity of all software packages during installation",
            handle => "stigs_files_yum_config_files",
         edit_line => stigs_maintain_yum_repos_d_files_check_gpgcheck;


  packages:

    "$(packages_to_install)"
             comment => "Install needed packages",
              handle => "stigs_packages_install",
      package_policy => "add",
      package_method => generic;
 
    "$(packages_to_delete)" -> { "V-38587" }
             comment => "Install unnedded or problematic packages",
              handle => "stigs_packages_delete",
      package_policy => "delete",
      package_method => generic;


  commands:

    !have_systemd.restart_sysctl::
  
      "$(paths.sysctl) -p" -> { "GEN003600" }
         comment => "CAT II UNIX STIG: 3.20.5 Network Security",
          handle => "stigs_commands_restart_sysctl",
         contain => silent;
     
    have_systemd.restart_sysctl::
     
      "$(paths.systemctl) restart systemd-sysctl" -> { "GEN003600" }
         comment => "CAT II UNIX STIG: 3.20.5 Network Security",
          handle => "stigs_commands_systemd_restart_sysctl",
         contain => silent;
     
    restart_aliases::
     
      "/usr/bin/newaliases" -> { "GEN004640" }
         comment => "CAT I (Previously - V126) 4.7 Sendmail or Equivalent",
          handle => "stigs_commands_restart_aliases";
     
#    have_systemd.restart_syslog::
#   
#      "$(paths.systemctl) restart syslog" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
#         comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
#          handle => "stigs_commands_systemd_restart_syslog";
     
    have_init_d_syslog.!have_systemd.restart_syslog::
     
      "$(paths.service) syslog restart" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
         comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
          handle => "stigs_commands_initd_restart_syslog";
     
     have_systemd.restart_rsyslog::
     
      "$(paths.systemctl) restart rsyslog" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
         comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
          handle => "stigs_commands_systemd_restart_rsyslog";
     
    have_init_d_rsyslog.!have_systemd.restart_rsyslog::
     
      "$(paths.service) rsyslog restart" -> { "GEN000440", "GEN003160", "GEN003660", "GEN005400", "GEN005420" }
         comment => "CAT II & III (Previously - G012, G209, G656, G657) UNIX STIG: 3.1.3 Account Access, 4.14 System Logging Daemon",
          handle => "stigs_commands_initd_restart_rsyslog";
     
    have_systemd::
     
      "$(paths.systemctl) unmask $(preferred_services).$(systemd_service_ext)" -> { "GEN002660" }
            comment => "CAT II (Previously - G093) UNIX STIG: 3.16 Audit Requirements",
             handle => "stigs_commands_systemd_unmask_preferred",
         ifvarclass => "$(preferred_services)_inactive_$(systemd_service_ext)";
     
      "$(paths.systemctl) --now enable $(preferred_services).$(systemd_service_ext)" -> { "GEN002660" }
            comment => "CAT II (Previously - G093) UNIX STIG: 3.16 Audit Requirements",
             handle => "stigs_commands_systemd_enable_preferred",
         ifvarclass => "$(preferred_services)_inactive_$(systemd_service_ext)";
     
      "$(paths.systemctl) stop $(unneeded_services).$(systemd_service_ext)" -> { "GEN003700", "GEN003860" }
            comment => "CAT II (Previously - V046) UNIX STIG: 4 Network Services",
             handle => "stigs_commands_systemd_stop_unneeded",
         ifvarclass => "$(unneeded_services)_active_$(systemd_service_ext)";
     
      "$(paths.systemctl) mask $(unneeded_services).$(systemd_service_ext)" -> { "GEN003700", "GEN003860" }
            comment => "CAT II (Previously - V046) UNIX STIG: 4 Network Services",
             handle => "stigs_commands_systemd_mask_unneeded",
         ifvarclass => "$(unneeded_services)_active_$(systemd_service_ext)";
     
    have_init_d.!have_systemd::
     
      "$(paths.chkconfig) $(preferred_services) on" -> { "GEN002660" }
            comment => "CAT II (Previously - G093) UNIX STIG: 3.16 Audit Requirements",
             handle => "stigs_commands_initd_enable_preferred_services",
         ifvarclass => "$(preferred_services)_off";
     
      "$(paths.chkconfig) $(unneeded_services) off" -> { "GEN003700", "GEN003860" }
            comment => "CAT II (Previously - V046) UNIX STIG: 4 Network Services",
             handle => "stigs_commands_initd_disable_unneeded_services",
         ifvarclass => "$(unneeded_services)_on";
    
    have_systemd.restart_sshd::
     
      "$(paths.systemctl) restart sshd" -> { "GEN005500", "GEN005540" }
         comment => "CAT I & II (Previously - G701) UNIX STIG: 4.15 Secure Shell (SSH) and Equivalents",
          handle => "stigs_commands_systemd_restart_sshd";
     
    have_init_d_sshd.!have_systemd.restart_sshd::
     
      "$(paths.service) sshd restart" -> { "GEN005500", "GEN005540" }
         comment => "CAT I & II (Previously - G701) UNIX STIG: 4.15 Secure Shell (SSH) and Equivalents",
          handle => "stigs_commands_initd_restart_sshd";
       
# collision with unneeded services ?!
#    have_systemd.restart_sendmail::
#     
#      "$(paths.systemctl) restart sendmail" -> { "GEN004540", "GEN004560" }
#         comment => "CAT II (Previously - G646) UNIX STIG: 4.7 Sendmail or Equivalent",
#          handle => "stigs_commands_systemd_restart_sendmail";
     
#       have_init_d_sendmail.!have_systemd.restart_sendmail::
#     
#      "$(paths.service) sendmail restart" -> { "GEN004540", "GEN004560" }
#         comment => "CAT II (Previously - G646) UNIX STIG: 4.7 Sendmail or Equivalent",
#          handle => "stigs_commands_initd_restart_sendmail";
     
#       have_systemd.restart_postfix::
#   
#      "$(paths.systemctl) restart postfix" -> { "GEN004540", "GEN004560" }
#         comment => "CAT II (Previously - G646) UNIX STIG: 4.7 Sendmail or Equivalent",
#          handle => "stigs_commands_systemd_restart_postfix";
     
#       have_init_d_postfix.!have_systemd.restart_postfix::
#     
#      "$(paths.service) postfix restart" -> { "GEN004540", "GEN004560" }
#         comment => "CAT II (Previously - G646) UNIX STIG: 4.7 Sendmail or Equivalent",
#          handle => "stigs_commands_initd_restart_postfix";
     
    reload_systemd::
     
      "$(paths.systemctl) daemon-reload" -> { "GEN000020", "GEN000040", "GEN000060", "LNX00580" }
          comment => "CAT I & II (Previously - G001, G002, G003, L222) UNIX STIG: 2.5.1.1 System Equipment, 12.14 Systemd reload",
           handle => "stigs_commands_reload_systemd",
          contain => silent;
     
    !have_systemd.restart_inittab::
     
      "$(paths.init) q" -> { "GEN000020", "GEN000040", "GEN000060", "LNX00580" }
          comment => "CAT I & II (Previously - G001, G002, G003, L222) UNIX STIG: 2.5.1.1 System Equipment, 12.14 The /etc/inittab File",
           handle => "stigs_commands_restart_inittab",
          contain => silent;
     

  methods:

    redhat|centos::

      "UNIX STIG 3.2.1" -> { "GEN000560" }
           comment => "CAT I (Previously - G018) UNIX STIG: 3.2.1 Password Guidelines",
            handle => "stigs_methods_unix_stigs_3_2_1",
         usebundle => stigs_disable_accounts_without_passwd("$(shadow_list)");
     
      "UNIX STIG 3.12.1" -> { "GEN002420" }
           comment => "CAT II (Previously - G086) UNIX STIG: 3.12.1 Set User ID (suid)",
            handle => "stigs_methods_unix_stigs_3_12_1",
         usebundle => stigs_remount_filesystems_with_nosuid("/etc/fstab","$(fstab_list)");
     
# account deletion makes disabling unneeded
#      "UNIX STIG 4.8" -> { "GEN004820", "GEN004840" }
#           comment => "CAT II (Previously - L140, L142) UNIX STIG: 4.8 File Transfer Protocol (FTP)",
#            handle => "stigs_methods_unix_stigs_4_8",
#         usebundle => stigs_disable_accounts("$(accounts_to_disable)");
      
      "UNIX STIG 4.8/UNIX STIG 12.9" -> { "GEN004820", "GEN004840", "LNX00320", "LNX00340" }
           comment => "CAT I & II (Previously - G107, V052, L140, L142) UNIX STIG: 4.8 File Transfer Protocol (FTP) and Telnet, 12.9 Default Accounts",
            handle => "stigs_methods_unix_stigs_4_8_12_9",
         usebundle => stigs_delete_accounts("$(accounts_to_delete)");

}

##### bundle agent for methods here #####

# GEN000560
bundle agent stigs_disable_accounts_without_passwd(string)
{
  classes:

    "name_ok" -> { "GEN000560" }
          comment => "Extract only a name field from an inputs string",
           handle => "stigs_disable_accounts_without_passwd_classes_name_field",
       expression => regextract(
                               "^[\w-]+",
                               "$(string)",
                               "name"
                               );
 
    "passwd_ok" -> { "GEN000560" }
          comment => "Extract only a passwd field from an inputs string",
           handle => "stigs_disable_accounts_without_passwd_classes_passwd_field",
       expression => regextract(
                               ":(.*?):",
                               "$(string)",
                               "passwd"
                               );
 
    "no_passwd" -> { "GEN000560" }
       comment => "Check if there is a password or not",
        handle => "stigs_disable_accounts_without_passwd_classes_no_passwd",
           not => regcmp(".*\$.*","$(passwd[1])");


  files:

    "/etc/passwd" -> { "GEN000560" }
          comment => "Set user shell /sbin/nologin",
           handle => "stigs_disable_accounts_without_passwd_files_etc_passwd",
        edit_line => set_user_field("$(name[0])","7","/sbin/nologin"),
       ifvarclass => "no_passwd";
}

# GEN002420
bundle agent stigs_remount_filesystems_with_nosuid(path,string)
{
  classes:

    "option_ok" expression => regextract(
                                   "\S+\s+\S+\s+\S+\s+(\S+)",
                                   "$(string)",
                                   "option"
                                   );
  
    "is_home"      expression => regcmp(".*\/home.*", "$(string)");
    "is_boot"      expression => regcmp(".*\/boot.*", "$(string)");
    "is_sys"       expression => regcmp(".*\/sys.*", "$(string)");
    "is_usr"       expression => regcmp(".*\/usr.*", "$(string)");
    "is_usr_local" expression => regcmp(".*\/usr\/local.*", "$(string)");
  
    "is_xfs"         expression => regcmp(".*xfs.*", "$(string)");
  
    "no_acl"         not => regcmp(".*acl.*", "$(string)");
    "no_nosuid"      not => regcmp(".*nosuid.*", "$(string)");
    "no_nodev"       not => regcmp(".*nodev.*", "$(string)");

  files:

    "$(path)"
       edit_line => stigs_set_fstab_field("/home","4","$(option[1]),acl"),
       ifvarclass => "is_home.no_acl.!is_xfs";
    "$(path)"
       edit_line => stigs_set_fstab_field("/home","4","$(option[1]),nosuid"),
       ifvarclass => "is_home.no_nosuid";
    "$(path)"
       edit_line => stigs_set_fstab_field("/home","4","$(option[1]),nodev"),
       ifvarclass => "is_home.no_nodev";
  
    "$(path)"
       edit_line => stigs_set_fstab_field("/boot","4","$(option[1]),acl"),
       ifvarclass => "is_boot.no_acl.!is_xfs";
    "$(path)"
       edit_line => stigs_set_fstab_field("/boot","4","$(option[1]),nosuid"),
       ifvarclass => "is_boot.no_nosuid";
  
    "$(path)"
       edit_line => stigs_set_fstab_field("/sys","4","$(option[1]),acl"),
       ifvarclass => "is_sys.no_acl.!is_xfs";
    "$(path)"
       edit_line => stigs_set_fstab_field("/sys","4","$(option[1]),nosuid"),
       ifvarclass => "is_sys.no_nosuid";
  
    "$(path)"
       edit_line => stigs_set_fstab_field("/usr","4","$(option[1]),acl"),
       ifvarclass => "is_usr.no_acl.!is_xfs";
    "$(path)"
       edit_line => stigs_set_fstab_field("/usr","4","$(option[1]),nodev"),
       ifvarclass => "is_usr.no_nodev";
  
    "$(path)"
       edit_line => stigs_set_fstab_field("/usr/local","4","$(option[1]),acl"),
       ifvarclass => "is_usr_local.no_acl.!is_xfs";
    "$(path)"
       edit_line => stigs_set_fstab_field("/usr/local","4","$(option[1]),nodev"),
       ifvarclass => "is_usr_local.no_nodev";
  
    "$(path)"
       edit_line => stigs_insert_modified_banner;
}

# GEN004828, GEN004840
bundle agent stigs_disable_accounts(name)
{
  files:

    "/etc/passwd" -> { "GEN004820", "GEN004840" }
         comment => "Set shell to /sbin/nologin",
          handle => "stigs_disable_accounts_files_etc_passwd",
       edit_line => set_user_field("$(name)","7","/sbin/nologin");
  
    "/etc/shadow" -> { "GEN004820", "GEN004840" }
         comment => "Set passwd to !",
          handle => "stigs_disable_accounts_files_etc_shadow",
       edit_line => set_user_field("$(name)","2","!!");
}

# LNX00320, LNX00340
bundle agent stigs_delete_accounts(name)
{
  files:

    "/etc/passwd" -> { "LNX00320", "LNX00340" }
         comment => "Remove unnecessary accounts from /etc/passwd",
          handle => "stigs_delete_accounts_files_etc_passwd",
       edit_line => delete_lines_matching("^$(name):.*");
  
    "/etc/shadow" -> { "LNX00320", "LNX00340" }
         comment => "Remove unnecessary accounts from /etc/shadow",
          handle => "stigs_delete_accounts_files_etc_shadow",
       edit_line => delete_lines_matching("^$(name):.*");
}

#
##### bundle edit_line here #####
#

# GEN000020, GEN000040, GEN000060, LNX00580
bundle edit_line stigs_maintain_inittab
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";
    "$(jb_STIGs.params[added_re])";
    "~:S:wait.*" -> { "GEN000020", "GEN000040", "GEN000060" }
       comment => "Configured to require a password when boot to single-user mode.",
        handle => "stigs_maintain_inittab_delete_lines_gen000020_gen000040_gen000060";
  
    "^ca::ctrlaltdel.*" -> { "LNX00580" }
       comment => "Disable CTRL+ALT+DEL.",
        handle => "stigs_maintain_inittab_delete_lines_lnx00580";

  insert_lines:

    "$(jb_STIGs.params[modified])"  insert_type => "preserve_block", location => start;
    "$(jb_STIGs.params[added])";
    "~:S:wait:/sbin/sulogin   # GEN000020, GEN000040, GEN000060" -> { "GEN000020", "GEN000040", "GEN000060" }
       comment => "Configured to require a password when boot to single-user mode.",
        handle => "stigs_maintain_inittab_insert_lines_gen000020_gen000040_gen000060";
  
    "ca:12345:ctrlaltdel:$(paths.echo) \"CTRL-ALT-DEL is disabled\"   # LNX00580" -> { "LNX00580" }
       comment => "Disable CTRL+ALT+DEL.",
        handle => "stigs_maintain_inittab_insert_lines_lnx00580";
}

# GEN000440, GEN003160, GEN003660
bundle edit_line stigs_maintain_syslog_conf
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";
    "^auth.notice.*" -> { "GEN003660" }
       comment => "Delete existing auth.notice log",
        handle => "stigs_maintain_syslog_conf_delete_lines_gen003660";

  replace_patterns:

    "^authpriv\.\*\h+(?!/var/log/secure).*" -> { "GEN000440" }
            comment => "Check authentication log will be shown in /var/log/secure",
             handle => "stigs_maintain_syslog_conf_replace_patterns_gen000440_1",
       replace_with => value("authprivdummy");

    "^authprivdummy$" -> { "GEN000440" }
            comment => "Check authentication log will be shown in /var/log/secure",
             handle => "stigs_maintain_syslog_conf_replace_patterns_gen000440_2",
       replace_with => value("authpriv.*$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)/var/log/secure");
  
    "^cron\.\*h+(?!/var/log/cron).*" -> { "GEN003160" }
            comment => "Check cron log will be shown in /var/log/cron",
             handle => "stigs_maintain_syslog_conf_replace_patterns_gen003160_1",
       replace_with => value("crondummy");

    "^crondummy$" -> { "GEN003160" }
            comment => "Check cron log will be shown in /var/log/cron",
             handle => "stigs_maintain_syslog_conf_replace_patterns_gen003160_2",
       replace_with => value("cron.*$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)/var/log/cron");

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
    "auth.notice$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)$(const.t)/var/log/messages" -> { "GEN003660" }
       comment => "Log authentication notice and informational data",
        handle => "stigs_maintain_syslog_conf_insert_lines_gen003660";
}

# GEN000460, GEN000600, GEN000620, GEN000640, GEN000800
bundle edit_line stigs_maintain_system_auth
{
  insert_lines:

    "$(jb_STIGs.params[created])" insert_type => "preserve_block";

    "#%PAM-1.0
# GEN000460, GEN000600, GEN000620, GEN000640, GEN000800
auth        required      pam_tally2.so deny=3 onerr=fail unlock_time=900

auth        required      pam_env.so
auth        required      pam_unix.so nullok try_first_pass audit

account     required      pam_unix.so
account     required      pam_tally2.so
password    required      pam_cracklib.so try_first_pass retry=3 minlen=10 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 difok=-2
password    required      pam_unix.so md5 shadow nullok try_first_pass use_authtok remember=10

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     required      pam_unix.so" -> { "GEN000460", "GEN000600", "GEN000620", "GEN000640", "GEN000800" }
         comment => "Ensure /etc/pam.d/system-auth-ac has good contents",
          handle => "stigs_maintain_system_auth_insert_lines_gen000460",
     insert_type => "preserve_block";
}

# GEN000480, GEN000540, GEN000580, GEN000700
bundle edit_line stigs_maintain_login_defs
{
  replace_patterns:

   "^PASS_MAX_DAYS\h+(?!90).*" -> { "GEN000700" }
      comment => "Passwords will be expired in 90 days.",
       handle => "stigs_maintain_login_defs_replace_patterns_gen000700_1",
      replace_with => value("PASS_MAX_DAYSdummy90");
   "^PASS_MAX_DAYSdummy90" -> { "GEN000700" }
      comment => "Passwords will be expired in 90 days.",
       handle => "stigs_maintain_login_defs_replace_patterns_gen000700_2",
      replace_with => value("PASS_MAX_DAYS   90   # GEN000700");
  
   "^PASS_MIN_DAYS\h+(?!1).*" -> { "GEN000540" }
      comment => "Passwords can be changed once every 24 hours.",
       handle => "stigs_maintain_login_defs_replace_patterns_gen000540_1",
      replace_with => value("PASS_MIN_DAYSdummy1");
   "^PASS_MIN_DAYSdummy1" -> { "GEN000540" }
      comment => "Passwords can be changed once every 24 hours.",
       handle => "stigs_maintain_login_defs_replace_patterns_gen000540_2",
      replace_with => value("PASS_MIN_DAYS    1   # GEN000540");
  
    "^PASS_MIN_LEN\h+(?!8).*" -> { "GEN000580" }
       comment => "A password does not contain a minimum of 8 characters",
        handle => "stigs_maintain_login_defs_replace_patterns_gen000580_1",
       replace_with => value("PASS_MIN_LENdummy8");
    "^PASS_MIN_LENdummy8" -> { "GEN000580" }
       comment => "A password does not contain a minimum of 8 characters",
        handle => "stigs_maintain_login_defs_replace_patterns_gen000580_2",
       replace_with => value("PASS_MIN_LEN    8   # GEN000580");

  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^FAIL_DELAY.*" -> { "GEN000480" }
       comment => "Clear up an existing login delay.",
        handle => "stigs_maintain_login_defs_delete_lines_gen000480";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

    "FAIL_DELAY     4   # GEN000480" -> { "GEN000480" }
       comment => "The login delay between login prompts after a failed login is set to less than four seconds.",
        handle => "stigs_maintain_login_defs_insert_lines_gen000480";  
}

# GEN000500
bundle edit_line stigs_maintain_etc_profile
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";
    "$(jb_STIGs.params[added_re])";
    "^TMOUT.*" -> { "GEN000500" }
       comment => "Clear up all TMOUT lines",
        handle => "stigs_maintain_etc_profile_delete_lines_gen000500";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

    "$(jb_STIGs.params[added])";

    "TMOUT=900" -> { "GEN000500" }
       comment => "Set TMOUT to lock the screen after 15 minutes of inactivity",
        handle => "stigs_maintain_etc_profile_insert_lines_gen000500";
}

# GEN000980
bundle edit_line stigs_maintain_securetty
{
  insert_lines:

    "$(jb_STIGs.params[created])" insert_type => "preserve_block", location => start;

    "console
tty1
tty2
tty3
tty4
tty5" -> { "GEN000980" }
          comment => "Allow root to login only from the system console.",
           handle => "stigs_maintain_securetty_insert_lines_gen000980",
      insert_type => "preserve_block";
}

# GEN001020
bundle edit_line stigs_maintain_pamd_sshd
{
  replace_patterns:

    "^account\s+required\s+pam_(?!access).*so$" -> { "GEN001020" }
           comment => "Root privilege must be gained via switch from user account",
            handle => "stigs_maintain_pamd_sshd_replace_patterns_gen001020",
      replace_with => value("account    required     pam_access.so");

  delete_lines: 

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# GEN001020
bundle edit_line stigs_maintain_pamd_login
{
  replace_patterns:

    "^account\s+required\s+pam_(?!access).*so$" -> { "GEN001020" }
           comment => "Root privilege must be gained via switch from user account",
            handle => "stigs_maintain_pamd_login_replace_patterns_gen001020",
      replace_with => value("account    required     pam_access.so");

  delete_lines: 

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])"  insert_type => "preserve_block", location => start;
}

# GEN001020
bundle edit_line stigs_maintain_security_access_conf
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";
    "$(jb_STIGs.params[added_re])";
    "[+-]\s+:\s+root\s+:\s+.*";
    "\-\s+:\s+ALL\s+EXCEPT\s+users\s+:\s+ALL";

  insert_lines:

    "$(jb_STIGs.params[modified])"  insert_type => "preserve_block", location => start;

    "$(jb_STIGs.params[added])";

    "+ : root : cron crond tty1 tty2 tty3 tty4 tty5
- : root : ALL EXCEPT LOCAL
- : ALL EXCEPT users : ALL" -> { "GEN001020" }
          comment => "Allow only root uses cron and local login",
           handle => "stigs_maintain_security_access_conf_insert_lines_gen001020",
      insert_type => "preserve_block";
}

# GEN002120
bundle edit_line stigs_maintain_etc_shells
{
  insert_lines:

    "$(jb_STIGs.params[created])";

    "/bin/sh
/bin/bash
/sbin/nologin
/bin/tcsh
/bin/csh
/bin/ksh
/bin/ksh93" -> { "GEN002120" }
          comment => "Ensure /etc/shells has good contents",
           handle => "stigs_maintain_etc_shells_insert_lines_gen002120",
      insert_type => "preserve_block";
}

# GEN002320
bundle edit_line stigs_remove_audio_devices
{
  delete_lines:

    ".*sound.*" -> { "GEN002320" }
       comment => "Delete all lines contains a word, sound",
        handle => "stigs_remove_audio_devices_delete_lines_sound_gen002320";
  
    ".*snd.*" -> { "GEN002320" }
       comment => "Delete all lines contains a word, snd",
        handle => "stigs_remove_audio_devices_delete_lines_snd_gen002320";
  
    ".*mixer.*" -> { "GEN002320" }
       comment => "Delete all lines contains a word, mixer",
        handle => "stigs_remove_audio_devices_delete_lines_mixer_gen002320";
}

# GEN002320, GEN002340, GEN002360
bundle edit_line stigs_maintain_audio_devices
{
  insert_lines:

    "SUBSYSTEM==\"sound|snd\", OWNER=\"root\", GROUP=\"root\", MODE=\"0644\""
      comment => "Append a line to ensure audio devices' permission and ownership",
       handle => "stigs_maintain_audio_devices_insert_lines_gen002320";
}

# GEN002420
bundle edit_line stigs_set_fstab_field(path,field,val)
{
  field_edits:

    ".*\$(path)\s.*"
         comment => "Edit a user attribute in the password file",
      edit_field => col("\s+","$(field)","$(val)","set");
}

# GEN002560
bundle edit_line stigs_maintain_umask(mask)
{
  replace_patterns:

    "\h+umask\s(?!$(mask)$).*" -> { "GEN002560" }
           comment => "Ensure umask is 077",
            handle => "stigs_maintain_umask_replace_patterns_gen002560",
      replace_with => value("    umask 077");	
}

# GEN002660 GEN002720 GEN002740 GEN002760 GEN002780 GEN002800 GEN002820 GEN002840
bundle edit_line stigs_maintain_audit_rules
{
  insert_lines:

    "$(jb_STIGs.params[created])" insert_type => "preserve_block";

    "# This file contains the auditctl rules that are loaded
# whenever the audit daemon is started via the initscripts.
# The rules are simply the parameters that would be passed
# to auditctl.

# GEN002660 GEN002720 GEN002740 GEN002760 GEN002780 GEN002800 GEN002820 GEN002840

# First rule - delete all
-D

# Enable auditing
-e 1

# Increase the buffers to survive stress events.
# Make this bigger for busy systems
-b 8192

# Failure of auditd causes a kernel panic
-f 2

# GEN002720 Logon/Logout
-w /bin/login -p x
-w /bin/logout -p x

# GEN002740 DAC permission changes
-a exit,always -S chmod -S chown -S chown32 -S fchmod -S fchown -S fchown32 -S lchown -S lchown32

# GEN002760 Unauthorized file access attempts
-a exit,always -F success=0 -S open -S mknod -S pipe -S mkdir -S creat -S truncate -S truncate64 -S ftruncate -S ftruncate64

# GEN002780 Privileged commands
-a exit,always -S chroot -S mount -S umount -S umount2 -S adjtimex -S kill
-w /usr/sbin/pwck
-w /bin/chgrp
-w /usr/bin/newgrp
-w $(paths.groupadd)
-w $(paths.groupmod)
-w $(paths.groupdel)
-w $(paths.useradd)
-w $(paths.userdel)
-w $(paths.usermod)
-w /usr/bin/chage
-w /usr/bin/setfacl
-w /usr/bin/chacl

# GEN002800 Deleting files
-a exit,always -S unlink -S rmdir

# GEN002820 System administration actions
# These two lines could be the cause of problems with filling audit logs and preventing system usage after installation
-w /var/log/audit/audit.log
-w /var/log/audit/audit[1-4].log
-w /var/log/messages
-w /var/log/lastlog
-w /var/log/faillog
-w /etc/audit/auditd.conf -p wa
-w /etc/audit/audit.rules -p wa
-w /etc/selinux/config -p wa
-w /etc/passwd -p wa
-w /etc/shadow -p wa
-w /etc/group  -p wa
-w /etc/ssh/sshd_config
-w /etc/pam.d
-w /etc/login.defs
-w /etc/rc.d/init.d
-w /etc/inittab -p wa
-w /var/run/utmp
-w /var/run/wtmp
-a exit,always -S acct -S reboot -S sched_setparam -S sched_setscheduler -S setdomainname -S setrlimit -S settimeofday -S stime -S swapon

# GEN002840 Security personnel actions
-a exit,always -S init_module -S delete_module -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr
-w /bin/su" -> { "GEN002660", "GEN002720", "GEN002740", "GEN002760", "GEN002780", "GEN002800", "GEN002820", "GEN002840" }
         comment => "Ensure /etc/audit/audit.rules has good contents",
          handle => "stigs_maintain_audit_rules_insert_lines_gen002660_gen002720_gen002840",
     insert_type => "preserve_block";
}

# GEN002860
bundle edit_line stigs_maintain_logrotated_audit
{
  insert_lines:

    "$(jb_STIGs.params[created])" insert_type => "preserve_block";

    "/var/log/audit/audit.log {
$(const.t)daily
$(const.t)notifempty
$(const.t)missingok
$(const.t)postrotate
$(const.t)$(paths.service) auditd restart 2> /dev/null > /dev/null || true
$(const.t)endscript
}" -> { "GEN002860" }
         comment => "Ensure old audit logs are closed and new audit logs are started daily",
          handle => "stigs_maintain_logrotated_audit_insert_lines_gen002860",
     insert_type => "preserve_block";
}

# GEN002960
bundle edit_line stigs_maintain_cron_allow(name)
{
#  delete_lines:
#
#    ".*" -> { "GEN002960" }
#      comment => "Remove all restricted users",
#       handle => "stigs_maintain_cron_allow_delete_lines_gen02960";

  insert_lines:

    "$(name)" -> { "GEN002960" }
      comment => "Allow users from the list to use cron utility",
       handle => "stigs_maintain_cron_allow_insert_lines_gen02960";
}

# GEN003320
bundle edit_line stigs_maintain_at_allow
{
  insert_lines:

    "root" -> { "GEN003320" }
      comment => "Remove all restricted users",
       handle => "stigs_maintain_at_allow_insert_lines_gen03320";
}

# moved to external file
#
## GEN003600 GEN005600
#bundle edit_line stigs_maintain_sysctl_conf
#{
#  delete_lines:
#
#    "^net.ipv4.tcp_max_syn_backlog.*" -> { "GEN003600" }
#      comment => "Clear up an existing Network parameters.",
#       handle => "stigs_maintain_sysctl_conf_delete_lines_gen003600";
#
#    "^net.ipv4.ip_forward.*" -> { "GEN005600" }
#      comment => "Clear up an existing ip_forward parameters.",
#       handle => "stigs_maintain_sysctl_conf_delete_lines_gen005600";
#
#  insert_lines:
#
#    "net.ipv4.tcp_max_syn_backlog = 1280" -> { "GEN003600" }
#      comment => "Secure Network parameters.",
#       handle => "stigs_maintain_sysctl_conf_insert_lines_gen003600";
#
#    "net.ipv4.ip_forward = 0" -> { "GEN005600" }
#      comment => "Disable IP forwarding.",
#       handle => "stigs_maintain_sysctl_conf_insert_lines_gen005600";
#
#}

## GEN004440 GEN004540, GEN004560
#bundle edit_line stigs_maintain_sendmail
#{
#  replace_patterns:
#
#    "^O LogLevel=(?!9).*" -> { "GEN004440" }
#           comment => "Disable the sendmail help command.",
#            handle => "stigs_maintain_sendmail_replace_patterns_gen004440",
#      replace_with => value("O LogLevel=9");
#
#    "^(O.*helpfile)$" -> { "GEN004540" }
#           comment => "Disable the sendmail help command.",
#            handle => "stigs_maintain_sendmail_replace_patterns_gen004540",
#      replace_with => comment("#");
#
#    "^O SmtpGreetingMessage=\$j Sendmail \$v/\$Z; \$b" -> { "GEN004560" }
#           comment => "Hide sendmail version.",
#            handle => "stigs_maintain_sendmail_replace_patterns_gen004560",
#      replace_with => value("O SmtpGreetingMessage=$j Sendmail STIG-GEN004560; $b"); 	
#}

# GEN004900
bundle edit_line stigs_maintain_ftpusers(name)
{
  delete_lines: 

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

    "root" -> { "GEN004900" }
      comment => "Add system accounts to /etc/ftpusers",
       handle => "stigs_maintain_ftpusers_insert_lines_root_gen004900";

    "avahi-autoipd" -> { "GEN004900" }
      comment => "Add system accounts to /etc/ftpusers",
       handle => "stigs_maintain_ftpusers_insert_lines_avahi_autoipd_gen004900";

    "$(name)" -> { "GEN004900" }
      comment => "Add system accounts to /etc/ftpusers",
       handle => "stigs_maintain_ftpusers_insert_lines_system_accounts_gen004900";
}

# GEN005540
bundle edit_line stigs_create_ssh_banner
{
  insert_lines:

    "*******************************************************************************
* NOTICE TO USERS WARNING! The use of this system is restricted to authorized *
* users, unauthorized access is forbidden and will be prosecuted by law.      *
* All information and communications on this system are subject to review,    *
* monitoring and recording at any time, without notice or permission.         *
*            ***Users should have no expectation of privacy.***               *
*******************************************************************************" -> { "GEN005540" }
      comment => "Banner for SSH",
       handle => "stigs_create_ssh_banner_insert_lines_gen005540";	
}

# GEN001120, GEN005500, GEN005540
bundle edit_line stigs_maintain_sshd_config
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^Banner.*" -> { "GEN005540" }
      comment => "Clear up an existing Banner.",
       handle => "stigs_maintain_sshd_config_delete_lines_gen005540";

    "^PermitRootLogin.*" -> { "GEN001120" }
      comment => "Clear up an existing PermitRootLogin",
       handle => "stigs_maintain_sshd_config_delete_lines_gen001120";

    "^Protocol.*" -> { "GEN005500" }
      comment => "Clear up an existing Protocol",
       handle => "stigs_maintain_sshd_config_delete_lines_gen005500";

    "^PermitEmptyPasswords.*" -> { "V-38614" }
      comment => "Clean up on PermitEmptyPasswords",
       handle => "stigs_maintain_sshd_config_delete_lines_V_38614";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

    "Banner /etc/ssh/ssh_banner   # GEN005540" -> { "GEN005540" }
      comment => "Configure a warning banner.",
       handle => "stigs_maintain_sshd_config_insert_lines_gen005540";

    "PermitRootLogin no   # GEN001120" -> { "GEN001120" }
      comment => "Don't allow root to use SSH directly.",
       handle => "stigs_maintain_sshd_config_insert_lines_gen001120";

    "Protocol 2   # GEN005500" -> { "GEN005500", "V-38607" }
      comment => "Allow only SSH Protocol version 2",
       handle => "stigs_maintain_sshd_config_insert_lines_gen005500";

    "PermitEmptyPasswords no   # V-38614" -> { "V-38614" }
      comment => "Disallow login with empty password",
       handle => "stigs_maintain_sshd_config_insert_lines_V_38614";
}

# GEN005500
bundle edit_line stigs_maintain_ssh_config
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^Ciphers.*" -> { "GEN005500" }
      comment => "Clear up an existing Ciphers",
       handle => "stigs_maintain_ssh_config_delete_lines_gen005500";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

    "Ciphers aes256-cbc,aes192-cbc,blowfish-cbc,cast128-cbc,aes128-cbc,3des-cbc" -> { "GEN005500" }
      comment => "Allow only specific ciphers to be used",
       handle => "stigs_maintain_ssh_config_insert_lines_gen005500";
}

# LNX00140
bundle edit_line stigs_maintain_grub
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^password.*" -> { "LNX00140" }
      comment => "Clear up an existing MD5 encrypted password.",
       handle => "stigs_maintain_grub_delete_lines_lnx00140";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

# default password is cfengine
    "password --md5 $(const.dollar)1$(const.dollar)8fI020$(const.dollar)YPs7MCo3A1ZkS7xagjYnb0" -> { "LNX00140" }
        comment => "Use an MD5 encrypted password to GRUB",
         handle => "stigs_maintain_grub_insert_lines_lnx00140",
       location => stigs_before("^title.*");
}

# LNX00360
bundle edit_line stigs_maintain_gdm_custom_conf
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";
    ".*server.*Standard.*";
    ".*Standard.*server";
    "^command.*usr.bin.Xorg.*br.*audit.*";

    "^flexible.*true$"
      comment => "Clean up previous X server audit level ans stuff",
       handle => "stigs_maintain_gdm_custom_conf_delete_lines_lnx00360";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;

   "[server-Standard]
name=Standard server
command=/usr/bin/Xorg -br -audit 4 -s 15
flexible=true" -> { "LNX00360" }
         comment => "Enable X server audit level 4 and 15 minutes timeout time",
          handle => "stigs_maintain_gdm_custom_conf_insert_lines_lnx00360",
     insert_type => "preserve_block"; 
}

# V-38462
bundle edit_line stigs_maintain_rpm_config_files_remove_nosignature
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^nosignature.*" -> { "V-38462" }
      comment => "Clear up nosignature option from file",
       handle => "stigs_maintain_rpm_config_files_remove_nosignature_delete_lines_V_38462";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# V-38462
bundle edit_line stigs_maintain_yum_repos_d_files_check_gpgcheck
{
  replace_patterns:

    "^gpgcheck=0" ->  { "V-38462" }
           comment => "Clear up gpgcheck option from file",
            handle => "stigs_maintain_yum_repos_d_files_check_gpgcheck_replace_patterns_V_38462",
      replace_with => value("gpgcheck=1");

  delete_lines:

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# V-38677
bundle edit_line stigs_maintain_etc_exports_remove_insecure_locks
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

    "^insecure_locks.*" -> { "V-38677" }
      comment => "Clear up insecure_locks from file",
       handle => "stigs_maintain_etc_exports_remove_insecure_locks_delete_lines_V_38677";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# V-38701
bundle edit_line stigs_maintain_xinet_d_tftp
{
  replace_patterns:

    "server_args\s+=\s+-(?!s)." -> { "V-38701" }
           comment => "Ensure that xinetd tftpd has -s option in arguments",
            handle => "stigs_maintain_xinet_d_tftp_replace_patterns_V_38701",
      replace_with => value("server_args             = -s");

  delete_lines:

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# V-38701
bundle edit_line stigs_maintain_systemd_tftp_service
{
   replace_patterns:

     "ExecStart=/usr/sbin/in\.tftpd\s+-(?!s)." -> { "V-38701" }
            comment => "Ensure that tftpd.service in line with ExecStart has -s as option",
             handle => "stigs_maintain_systemd_tftp_service_replace_patterns_V_38701",
       replace_with => value("ExecStart=/usr/sbin/in.tftpd -s");

  delete_lines:

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# V-38653
bundle edit_line stigs_maintain_snmpd_conf_comment_out_default_settings
{
  replace_patterns:

    "^com2sec\s+notConfigUser\s+default\s+public" -> { "V-38653" }
           comment => "Ensure that default SNMP password is disabled",
            handle => "stigs_maintain_snmpd_conf_remove_default_public_replace_patterns_V_38653_1",
      replace_with => value("#com2sec notConfigUser default    public");

    "^group\s+notConfigGroup"  -> { "V-38653" }
           comment => "Ensure that default SNMP group is disabled",
            handle => "stigs_maintain_snmpd_conf_remove_default_public_replace_patterns_V_38653_2",
      replace_with => value("#group   notConfigGroup");

    "^view\s+systemview\s+included"  -> { "V-38653" }
           comment => "Ensure that default SNMP view is disabled",
            handle => "stigs_maintain_snmpd_conf_remove_default_public_replace_patterns_V_38653_3",
      replace_with => value("#view    systemview    included");

    "^access\s+notConfigGroup"  -> { "V-38653" }
           comment => "Ensure that default SNMP access is disabled",
            handle => "stigs_maintain_snmpd_conf_remove_default_public_replace_patterns_V_38653_4",
      replace_with => value("#access  notConfigGroup");

  delete_lines:

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}

# internal
bundle edit_line stigs_insert_modified_banner
{
  delete_lines:

    "$(jb_STIGs.params[modified_re])";

  insert_lines:

    "$(jb_STIGs.params[modified])" insert_type => "preserve_block", location => start;
}


##### body here #####

body location stigs_before(str)
{
  before_after => "before";
  first_last => "first";
  select_line_matching => "$(str)";
}

body file_select stigs_cron_dirs
{
  leaf_name => { "cron.*" };
  file_types  => { "dir" };
  file_result => "leaf_name.file_types";
}

body file_select stigs_exclude2(name1,name2)
{
  leaf_name  => { "$(name1)", "$(name2)"};
  file_result => "!leaf_name";
}

body file_select stigs_only_dir_exclude2(name1,name2)
{
  file_types  => { "dir" };
  leaf_name  => { "$(name1)", "$(name2)"};
  file_result => "!leaf_name.file_types";
}

##### body here 2 #####

body file_select stigs_systemd_conf_files_select
{
  leaf_name => { ".*\.service", ".*\.target", ".*\.slice", ".*\.mount", ".*\.socket", ".*\.path", ".*\.timer"};
  file_result => "leaf_name";
}


