#######################################################
# VIM for CFEngine
#######################################################
#
# Scenario:
# Install vim text editor and CFEngine highlighting syntax.
# Alternatively use curl to fetch files - no need to install
# wget then.
#
# Original author: Jurica Borozan
# Version: 1.2.0
#


##
## When testing uncoment
##
#body common control
#{
#  any::
#    bundlesequence => { "jb_vim_for_cfengine" };
#    inputs => { "$(sys.libdir)/stdlib.cf" };
#}

##
##
##
bundle agent jb_vim_for_cfengine
{
  meta:
    "tags" slist => { "autorun" };

  vars:

    linux::

      "params_files" slist => findfiles("$(this.promise_dirname)/$(this.bundle).json", "$(this.promise_dirname)/$(this.bundle).yaml");
      "params"        data => readdata(nth("params_files", 0), "auto");

      "vim_files"    slist => getindices("params[files]");


  classes:

    linux::

      "have_wget" expression => fileexists("$(paths.wget)");

#      "have_curl" expression => fileexists("$(paths.curl)");

      "no_$(vim_files)" not => fileexists("$(vim_files)");


  packages:

    linux::

# if needed install it first
      "$(params[packages])"
               comment => "Install vim",
        package_policy => "add",
        package_method => generic,
               classes => if_repaired("vim_installed");


  files:

    redhat|centos::

      "/etc/vimrc"
          comment => "Change vimrc default configuration file",
        edit_line => jb_vim_for_cfengine_restore_etc_vimrc;

    ubuntu|debian::

      "/etc/vim/vimrc"
          comment => "Change vimrc default configuration file",
        edit_line => jb_vim_for_cfengine_restore_etc_vimrc;

    linux::

# create path and empty file first, if needed
      "$(vim_files)"
        comment => "Create directory paths and empty file $(vim_files)",
          create => "true",
        ifvarclass => canonify("no_$(vim_files)");


  commands:

# if syntax highlighting files not present fetch them via wget/curl first

    linux.have_wget::

      "$(paths.wget) -nv -O $(vim_files) $(params[files][$(vim_files)])"
           comment => "Fetching vim syntax highlighting file $(vim_files)",
           classes => if_ok("$(vim_files)_fetched"),
        ifvarclass => canonify("no_$(vim_files)");

#    linux.have_curl::
#
#      "$(paths.curl) -s -L -o $(vim_files) $(params[files][$(vim_files)])"
#           comment => "Fetching vim syntax highlighting files for CFEnfine",
#           classes => if_ok("$(vim_files)_fetched"),
#        ifvarclass => "!have_$(vim_files)";

}

##
##
##
bundle edit_line jb_vim_for_cfenginer_restore_etc_vimrc
{
  delete_lines:

    "au\s+BufRead.*cf3";

  insert_lines:

    "au BufRead,BufNewFile *.cf set ft=cf3"
      location => jb_vim_for_cfengine_append;
}

##
##
##
body location jb_vim_for_cfengine_append 
{
  before_after => "after";
}

